#container {
    display: flex;
    /* obviously it is used to align many elements inside a container */
    justify-content: center;
    flex-wrap: wrap;
    /* flex-direction:column; */
    height: 80vh;
    /* change unit to % and see the effect and also when we zoom why flex elements are wraping if the viewport width doesn't change*/
    width: 90vw;
    margin-top: 1vh;
    margin-left: 2vw;
    background-color: #e0f7ff;
    border-style: solid;
    border-width: 5px;
    box-shadow: 3px 3px 3px 5px brown;
    border-color: black;
    overflow: hidden;
    /* content is still present but hidden */


}



.incontainer {
    margin: 0px;
    flex-shrink: 1;
    flex-grow: 1;
    min-width: 1px;
    /* if flex-basis not set , it takes the value of width , if width is also not specified, it takes content size , this is the minimum*/
    /* try using flex-basis:5vw; and a long text input.. */
    text-align: center;
    font-size: 5vh;
    font-weight: bold;
    padding: 2vh;
    border-style: solid;
    border-color: black;
    border-width: 2px;



}




#btnmenu {
    display: flex;
    height: 6vh;
    width: 90vw;
    margin-top: 1vh;
    margin-left: 2vw;
    background-color: rgb(192, 192, 192);
    border-style: solid;
    border-width: 5px;
    box-shadow: 5px 5px 5px rgb(4, 190, 4);
    border-radius: 2px;

}




.btnelements {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 20vw;
    min-width: 1px;
    max-width: 100vw;
    max-height: 100vh;
    min-height: 1px;
    text-align: center;
    font-size: 3vh;
    overflow: hidden;


}

#add {
    text-shadow: 1px 1px 1px rgb(5, 216, 33);
}


#remove {
    text-shadow: 1px 1px 1px rgb(230, 7, 7);
}




#instruct {
    text-align: center;
    border-style: solid;
    border-width: 2px;
    border-radius: 8px;
    border-color: rgb(175, 175, 7);
    position: absolute;
    top: 20vh;
    left: 30vw;
    box-shadow: 3px 3px 3px 5px rgb(218, 218, 8);
    padding: 1vw;
    background-color: rgb(248, 248, 248);
    /* try with no background , it becomes transparent */
}